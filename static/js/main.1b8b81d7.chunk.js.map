{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Section/header/btn.module.css","components/Section/Top/Top.module.css","components/Section/Bottom/Bottom.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Section/header/btn.js","components/Section/Top/Top.js","components/Section/Bottom/Bottom.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","actions","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContacts","ContactForm","state","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","contacts","map","contact","includes","alert","onSubmit","resetForm","this","className","styles","label","input","type","pattern","title","required","onChange","button","Component","connect","items","dispatch","Btn","head","Button","href","variant","defaultProps","Top","children","style","top","bottom","onClick","item","filter","normalizedFilter","toLowerCase","form","App","Bottom","itemsReducer","createReducer","filterReducer","contactsReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1b8b81d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"ContactList_number__14V4G\",\"name\":\"ContactList_name__2WLgA\",\"item\":\"ContactList_item__3YsZK\",\"list\":\"ContactList_list__2T7aG\",\"button\":\"ContactList_button__1RuFy\",\"form\":\"ContactList_form__2qOOQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"btn_title__3n19h\",\"head\":\"btn_head__3HZu6\",\"button\":\"btn_button__WyeMi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Top_title__1LKvR\",\"top\":\"Top_top__38JaS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Bottom_title__FDBvL\",\"bottom\":\"Bottom_bottom__1kTT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\",\"label\":\"Filter_label__3DcZT\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\nconst filterContacts = createAction('contacts/filter');\n\nconst actions = { addContact, deleteContact, filterContacts };\n\nexport default actions;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name } = this.state;\n    const names = this.props.contacts.map(contact => contact.name);\n\n    names.includes(name)\n      ? alert(`${name} is already in contacts`)\n      : this.props.onSubmit({ ...this.state });\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleSubmit, handleChange } = this;\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleChange}\n          ></input>\n        </label>\n\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ contacts: { items } }) => ({\n  contacts: items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => {\n    return dispatch(actions.addContact(contact));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './btn.module.css';\n\nconst Btn = ({ title, button }) => {\n  return (\n    <header className={styles.head}>\n      <h1 className={styles.title}>{title}</h1>\n      <Button\n        className={styles.button}\n        href=\"https://github.com/2F4S7/goit-react-hw-06-phonebook\"\n        target=\"_blank\"\n        variant=\"dark\"\n        key={button}\n      >\n        Github Repository\n      </Button>{' '}\n    </header>\n  );\n};\n\nexport default Btn;\n\nBtn.defaultProps = {\n  title: '',\n};\n\nBtn.propTypes = {\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Top.module.css';\n\nconst Top = ({ title, children }) => {\n  return (\n    <section className={style.top}>\n      <h2 className={style.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nTop.defaultProps = {\n  title: 'New section',\n};\n\nTop.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Top;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Bottom.module.css';\n\nconst Top = ({ title, children }) => {\n  return (\n    <section className={style.bottom}>\n      <h2 className={style.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nTop.defaultProps = {\n  title: 'New section',\n};\n\nTop.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Top;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport actions from '../../../redux/contacts/contacts-actions';\nimport { connect } from 'react-redux';\nimport styles from '../ContactList.module.css';\n\nconst ContactItem = ({ id, name, number, onClick }) => {\n  return (\n    <li className={styles.item}>\n      <p className={styles.name}>{name}</p>\n      <p className={styles.number}>{number}</p>\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => onClick(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactItem);\n\nContactItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nimport style from './ContactList.module.css';\nimport { connect } from 'react-redux';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <ul className={style.form}>\n      {contacts.map(contact => {\n        const { id, name, number } = contact;\n\n        return <ContactItem key={id} name={name} number={number} id={id} />;\n      })}\n    </ul>\n  );\n};\n\nconst filterContacts = (items, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return items.filter(item =>\n    item.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: filterContacts(items, filter),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport actions from '../../redux/contacts/contacts-actions';\nimport { connect } from 'react-redux';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nconst mapStateToProps = ({ contacts: { filter } }) => ({\n  value: filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: ({ target: { value } }) => dispatch(actions.filterContacts(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport ContactForm from './components/ContactForm';\nimport Btn from './components/Section/header/btn';\nimport Top from './components/Section/Top';\nimport Bottom from './components/Section/Bottom';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst App = () => {\n  return (\n    <div>\n      <Btn title=\"React-Redux Home Work Phonebook 06\" />\n      <Top title=\"Phonebook\">\n        <ContactForm />\n      </Top>\n\n      <Bottom title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Bottom>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst itemsInitialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst itemsReducer = createReducer(itemsInitialState, {\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [actions.filterContacts]: ({ payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nexport default contactsReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}